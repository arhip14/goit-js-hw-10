{"mappings":"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","sources":["src/app.js","node_modules/slim-select/dist/slimselect.umd.js"],"sourcesContent":["import { fetchBreeds, fetchCatByBreed } from \"./cat-api.js\";\nimport SlimSelect from 'slim-select';\n\nexport function populateBreeds() {\n  const breedSelect = document.getElementById(\"breed-select\");\n  const loaderWrapper = document.querySelector(\".loader-wrapper\");\n  const errorWrapper = document.querySelector(\".error-wrapper\");\n\n  showLoader();\n\n  fetchBreeds()\n    .then(breeds => {\n      breeds.forEach(breed => {\n        const option = document.createElement(\"option\");\n        option.value = breed.id;\n        option.text = breed.name;\n        breedSelect.appendChild(option);\n      });\n    })\n    .catch(error => {\n      console.error(error);\n      showError();\n    })\n    .finally(() => {\n      hideLoader();\n    });\n\n  const select = new SlimSelect({\n    select: breedSelect,\n    placeholder: 'Select a breed',\n    allowDeselect: true,\n    showSearch: false,\n    onChange: function(info) {\n      const selectedBreedId = info.value;\n      fetchCatInfo(selectedBreedId);\n    },\n  });\n\n  function fetchCatInfo(breedId) {\n    showLoader();\n    hideError();\n\n    fetchCatByBreed(breedId)\n      .then(cats => {\n        if (cats.length > 0) {\n          const cat = cats[0];\n          const catImage = document.getElementById(\"cat-image\");\n          const catBreed = document.getElementById(\"cat-breed\");\n          const catDescription = document.getElementById(\"cat-description\");\n          const catTemperament = document.getElementById(\"cat-temperament\");\n\n          catImage.src = cat.url;\n          catBreed.textContent = `Breed: ${cat.breeds[0].name}`;\n          catDescription.textContent = `Description: ${cat.breeds[0].description}`;\n          catTemperament.textContent = `Temperament: ${cat.breeds[0].temperament}`;\n\n          showCatInfo();\n        } else {\n          showError();\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        showError();\n      })\n      .finally(() => {\n        hideLoader();\n      });\n  }\n\n  function showLoader() {\n    loaderWrapper.style.display = \"block\";\n  }\n\n  function hideLoader() {\n    loaderWrapper.style.display = \"none\";\n  }\n\n  function showError() {\n    errorWrapper.style.display = \"block\";\n  }\n\n  function hideError() {\n    errorWrapper.style.display = \"none\";\n  }\n\n  function showCatInfo() {\n    const catInfo = document.getElementById(\"cat-info\");\n    catInfo.style.display = \"block\";\n  }\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.selectAllText = optgroup.selectAllText || 'Select All';\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        this.callbacks.setSelected([''], false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n            this.updateDeselectAll();\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = d.selectAllText;\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                for (const o of d.options) {\n                                    if (!this.store.getOptionByID(o.id)) {\n                                        this.callbacks.addOption(o);\n                                    }\n                                }\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.select.addEventListener('change', this.valueChange.bind(this), {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                selectAllText: optgroup.dataset ? optgroup.dataset.selectalltext : 'Select all',\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange.bind(this));\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n"],"names":["$9dxg1","parcelRequire","$6f40c3a58f594b58$export$eb5c0346b28cf65c","breedSelect","document","getElementById","loaderWrapper","querySelector","errorWrapper","showLoader","fetchBreeds","then","breeds","forEach","breed","option","createElement","value","id","text","name","appendChild","catch","error","console","showError","finally","hideLoader","$parcel$interopDefault","$lewhg","select","placeholder","allowDeselect","showSearch","onChange","info","selectedBreedId","breedId","style","display","fetchCatByBreed","cats","length","cat","catImage","catBreed","catDescription","catTemperament","src","url","textContent","description","temperament","module","exports","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","parentByClass","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Settings","constructor","settings","this","class","isMultiple","isOpen","isFullOpen","intervalMove","disabled","undefined","alwaysOpen","searchPlaceholder","searchText","searchingText","searchHighlight","closeOnSelect","contentLocation","body","contentPosition","openPosition","placeholderText","hideSelected","showOptionTooltips","minSelected","maxSelected","timeoutDelay","maxValuesShown","maxValuesMessage","Optgroup","optgroup","label","selectAll","selectAllText","closable","options","o","push","Option","html","selected","mandatory","data","Store","validateDataArray","Array","isArray","Error","dataObj","validateOption","partialToFullData","dataFinal","optOptions","setData","selectType","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","search","searchFilter","trim","includeOptgroup","dataSearch","getSelectType","type","Render","enable","main","remove","classes","content","input","disable","add","open","arrow","path","setAttribute","arrowOpen","openAbove","openBelow","moveContent","store","selectedId","selectedOption","list","ensureElementInView","close","arrowClose","updateClassStyles","removeAttribute","cssText","updateAriaAttributes","role","mainDiv","_a","tabIndex","onkeydown","key","callbacks","highlight","highlighted","click","onclick","values","deselect","hide","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","afterChange","deselectSvg","createElementNS","deselectPath","arrowPath","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","innerHTML","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","single","innerText","outerHTML","currentNodes","childNodes","max","removeNodes","i","node","getAttribute","n","valueOut","hasChildNodes","removeChild","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","valueText","deleteDiv","valueDelete","preventDefault","deleteSvg","deletePath","optionDelete","contentDiv","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","addable","searchReturn","readOnly","oninput","target","ctrlKey","plus","plusPath","addablePath","inputValue","runFinish","oo","newOption","addableValue","Promise","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","optgroupLabel","selectOption","selectParent","renderError","errorDiv","renderSearching","searchingDiv","searching","renderOptions","noResults","optgroupEl","optgroupLabelText","optgroupActions","optgroupSelectAll","allSelected","o1","selectAllSvg","selectAllBox","optgroupSelectAllBox","selectAllCheck","optgroupSelectAllCheck","addEventListener","currentSelected","newSelected","s","map","o5","optgroupClosable","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","highlightText","searchHighlighter","currentTarget","elementID","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","Select","hideUI","showUI","changeListen","listen","observer","observe","subtree","childList","attributes","disconnect","valueChange","ev","onValueChange","getSelectedValues","observeCall","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","selectalltext","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","optionClass","Object","keys","removeEventListener","bind","passive","MutationObserver","SlimSelect","render","err","events","dataClean","runAfterChange","beforeOpen","afterOpen","clearInterval","setInterval","beforeClose","afterClose","searchResp","message","documentClick","windowResize","windowScroll","windowVisibilityChange","config","indexOf","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","factory"],"version":3,"file":"index.eb089794.js.map"}